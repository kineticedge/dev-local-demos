{

  "connector.class": "io.debezium.connector.mysql.MySqlConnector",

  "tasks.max": "1",

  "database.hostname": "mysql",
  "database.port": "3306",
  "database.user": "root",
  "database.password": "mysql",

  "database.server.id": "111111",
  "database.server.name": "_mysql_",

  "_comment" : "in debeizum 2+, topic.prefix used instead of database.server.name for topic prefixing.",  
  "topic.prefix" : "_mysql_",

  "database.include.list": "main",

  "snapshot.mode" : "schema_only",

  "schema.history.internal.kafka.topic": "MYSQL",
  "schema.history.internal.kafka.bootstrap.servers": "broker-1:9092,broker-2:9092",


  "database.history.kafka.bootstrap.servers": "broker-1:9092,broker-2:9092,broker-3:9092",
  "database.history.kafka.topic": "dbhistory._mysql_",
  "include.schema.changes": "true" ,

  "key.converter": "org.apache.kafka.connect.storage.StringConverter",
  "key.converter.schemas.enable": "false",

  "value.converter": "io.confluent.connect.avro.AvroConverter",
  "value.converter.schema.registry.url": "http://schema-registry:8081",

  "transforms": "unwrap,extract_user_pk,extract_store_pk,extract_order_pk",
  "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",

  "transforms.extract_user_pk.type" : "org.apache.kafka.connect.transforms.ExtractField$Key",
  "transforms.extract_user_pk.field" : "user_id",
  "transforms.extract_user_pk.predicate" : "user_topic",

  "transforms.extract_store_pk.type" : "org.apache.kafka.connect.transforms.ExtractField$Key",
  "transforms.extract_store_pk.field" : "store_id",
  "transforms.extract_store_pk.predicate" : "store_topic",

  "transforms.extract_order_pk.type" : "org.apache.kafka.connect.transforms.ExtractField$Key",
  "transforms.extract_order_pk.field" : "order_id",
  "transforms.extract_order_pk.predicate" : "order_topic",

  "predicates" : "user_topic,store_topic,order_topic",
  "predicates.user_topic.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
  "predicates.user_topic.pattern": ".*\\.users",

  "predicates.store_topic.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
  "predicates.store_topic.pattern": ".*\\.stores",

  "predicates.order_topic.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
  "predicates.order_topic.pattern": ".*\\.orders"

}
